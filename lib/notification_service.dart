import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:permission_handler/permission_handler.dart';
import 'config/app_config.dart';
import 'dart:io' show Platform;
import 'package:flutter/foundation.dart' show kDebugMode;

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫–ª—é—á –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∏–∑ —Å–µ—Ä–≤–∏—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
final GlobalKey<NavigatorState> navigatorKey = GlobalKey<NavigatorState>();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flutter Local Notifications
final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
    FlutterLocalNotificationsPlugin();

class NotificationService {
  static final NotificationService _instance = NotificationService._internal();
  factory NotificationService() => _instance;
  NotificationService._internal();

  FirebaseMessaging? _firebaseMessaging;
  String? _fcmToken;
  String? _authToken;
  bool _firebaseInitialized = false;

  /// –ë–∞–∑–æ–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–ï–ó –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
  /// –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  Future<void> initialize() async {
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–¥–ª—è –ø–æ–∫–∞–∑–∞ –≤ —à—Ç–æ—Ä–∫–µ Android)
      const AndroidInitializationSettings initializationSettingsAndroid =
          AndroidInitializationSettings('@mipmap/ic_launcher');

      const InitializationSettings initializationSettings = InitializationSettings(
        android: initializationSettingsAndroid,
      );

      await flutterLocalNotificationsPlugin.initialize(
        initializationSettings,
        onDidReceiveNotificationResponse: (NotificationResponse response) {
          print('üîî –ù–∞–∂–∞—Ç–æ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${response.payload}');
        },
      );

      print('‚úÖ Flutter Local Notifications –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
      await Firebase.initializeApp();
      _firebaseMessaging = FirebaseMessaging.instance;
      _firebaseInitialized = true;
      print('‚úÖ Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      FirebaseMessaging.onMessage.listen(_handleForegroundMessage);
      FirebaseMessaging.onMessageOpenedApp.listen(_handleBackgroundMessage);
      FirebaseMessaging.onBackgroundMessage(_handleBackgroundMessageStatic);

      print('üéØ –ë–∞–∑–æ–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (–ë–ï–ó –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π)');
      
      // ‚úÖ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ì–ï–ù–ï–†–ê–¶–ò–Ø FCM TOKEN, –ï–°–õ–ò –†–ê–ó–†–ï–®–ï–ù–ò–ï –£–ñ–ï –ï–°–¢–¨
      _checkAndGenerateTokenIfPermissionGranted();
    } catch (e) {
      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ü-4: –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Firebase
      print('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase: $e');
      print('üîî –°–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (–±–µ–∑ Firebase)');
      _firebaseInitialized = false;

      // Fallback –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      _fcmToken = 'test_fcm_token_${DateTime.now().millisecondsSinceEpoch}';
      final prefs = await SharedPreferences.getInstance();
      await prefs.setString('fcm_token', _fcmToken!);
      print('üîë Test FCM Token: $_fcmToken');
      
      // ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ (–µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω)
      Future.delayed(Duration(seconds: 1), () {
        final context = navigatorKey.currentContext;
        if (context != null && context.mounted) {
          ScaffoldMessenger.of(context).showSnackBar(
            SnackBar(
              content: Text('‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.'),
              backgroundColor: Colors.orange,
              duration: Duration(seconds: 5),
              action: SnackBarAction(
                label: 'OK',
                textColor: Colors.white,
                onPressed: () {},
              ),
            ),
          );
        }
      });
    }
  }

  /// ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è FCM token, –µ—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —É–∂–µ –µ—Å—Ç—å
  /// –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ initialize()
  Future<void> _checkAndGenerateTokenIfPermissionGranted() async {
    try {
      if (!_firebaseInitialized || _firebaseMessaging == null) {
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
      final status = await Permission.notification.status;
      
      if (status.isGranted) {
        print('‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É–∂–µ –µ—Å—Ç—å, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º FCM token...');
        
        // –ü–æ–ª—É—á–µ–Ω–∏–µ FCM —Ç–æ–∫–µ–Ω–∞
        _fcmToken = await _firebaseMessaging!.getToken();
        
        if (_fcmToken != null) {
          print('‚úÖ FCM Token –ø–æ–ª—É—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: ${_fcmToken!.substring(0, 20)}...');
          
          // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ
          final prefs = await SharedPreferences.getInstance();
          await prefs.setString('fcm_token', _fcmToken!);
          print('üíæ FCM Token —Å–æ—Ö—Ä–∞–Ω—ë–Ω –ª–æ–∫–∞–ª—å–Ω–æ');
          
          // –ï—Å–ª–∏ —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä
          if (_authToken != null) {
            print('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
            await _sendTokenToServer();
          }
        }
      } else {
        print('‚ÑπÔ∏è –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –¥–∞–Ω–æ. –ë—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω–æ –Ω–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ.');
      }
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: $e');
    }
  }

  /// –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  /// –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –¢–û–õ–¨–ö–û –Ω–∞ —ç–∫—Ä–∞–Ω–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
  Future<bool> requestNotificationPermission() async {
    try {
      print('üì± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
      
      if (!_firebaseInitialized || _firebaseMessaging == null) {
        print('‚ùå Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –°–Ω–∞—á–∞–ª–∞ –≤—ã–∑–æ–≤–∏—Ç–µ initialize()');
        return false;
      }

      // –®–ê–ì 1: –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —á–µ—Ä–µ–∑ permission_handler (–¥–ª—è Android 13+)
      print('üîî –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ permission_handler...');
      final status = await Permission.notification.request();
      print('üìä –°—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: $status');

      if (status.isDenied) {
        print('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω–∏–ª —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
        return false;
      }

      if (status.isPermanentlyDenied) {
        print('‚ùå –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ –Ω–∞–≤—Å–µ–≥–¥–∞. –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
        await openAppSettings();
        return false;
      }

      // –®–ê–ì 2: –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —á–µ—Ä–µ–∑ Firebase (–¥–ª—è iOS –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫)
      print('üîî –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Firebase...');
      NotificationSettings settings = await _firebaseMessaging!.requestPermission(
        alert: true,
        badge: true,
        sound: true,
      );

      print('üîî Firebase —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ: ${settings.authorizationStatus}');

      if (settings.authorizationStatus == AuthorizationStatus.authorized ||
          settings.authorizationStatus == AuthorizationStatus.provisional ||
          status.isGranted) {
        // –ü–æ–ª—É—á–µ–Ω–∏–µ FCM —Ç–æ–∫–µ–Ω–∞
        print('üîë –ü–æ–ª—É—á–∞–µ–º FCM Token...');
        _fcmToken = await _firebaseMessaging!.getToken();
        print('‚úÖ FCM Token –ø–æ–ª—É—á–µ–Ω: ${_fcmToken?.substring(0, 20)}...');

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ
        if (_fcmToken != null) {
          final prefs = await SharedPreferences.getInstance();
          await prefs.setString('fcm_token', _fcmToken!);
          print('üíæ FCM Token —Å–æ—Ö—Ä–∞–Ω—ë–Ω –ª–æ–∫–∞–ª—å–Ω–æ');
          
          // –ï—Å–ª–∏ —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä
          if (_authToken != null) {
            print('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
            await _sendTokenToServer();
          }
        }

        print('‚úÖ‚úÖ‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        return true;
      } else {
        print('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω–∏–ª —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
        return false;
      }
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: $e');
      print('üìã Stack trace: ${StackTrace.current}');
      return false;
    }
  }

  Future<void> setAuthToken(String token) async {
    _authToken = token;

    if (kDebugMode) {
      print('=' * 80);
      print('üîê Setting auth token for FCM');
      print('   Auth token: ${token.substring(0, 20)}...');
      print('   FCM token: $_fcmToken');
      print('   Firebase initialized: $_firebaseInitialized');
      print('=' * 80);
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ FCM —Ç–æ–∫–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (_fcmToken != null && _authToken != null) {
      print('üì§ Sending FCM token to server...');
      await _sendTokenToServer();
    } else {
      print('‚ùå Cannot send FCM token:');
      print('   FCM token is null: ${_fcmToken == null}');
      print('   Auth token is null: ${_authToken == null}');
    }
  }

  void _handleForegroundMessage(RemoteMessage message) {
    print('üì± –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ foreground: ${message.notification?.title}');

    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    if (message.notification != null) {
      print('üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${message.notification!.title} - ${message.notification!.body}');

      // –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —à—Ç–æ—Ä–∫–µ Android
      _showLocalNotification(
        message.notification!.title ?? '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
        message.notification!.body ?? '',
      );

      // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
      final context = navigatorKey.currentContext;
      if (context != null) {
        showInAppNotification(
          context,
          message.notification!.title ?? '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
          message.notification!.body ?? ''
        );
      }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    _handleNotificationData(message.data);
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∫–∞–∑–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —à—Ç–æ—Ä–∫–µ Android
  Future<void> _showLocalNotification(String title, String body) async {
    const AndroidNotificationDetails androidPlatformChannelSpecifics =
        AndroidNotificationDetails(
      'cleanup_channel',
      'CleanUp Notifications',
      channelDescription: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏—è—Ö –∏ –ø—Ä–æ–µ–∫—Ç–∞—Ö',
      importance: Importance.max,
      priority: Priority.high,
      showWhen: true,
      icon: '@mipmap/ic_launcher',
    );

    const NotificationDetails platformChannelSpecifics =
        NotificationDetails(android: androidPlatformChannelSpecifics);

    await flutterLocalNotificationsPlugin.show(
      DateTime.now().millisecondsSinceEpoch ~/ 1000,
      title,
      body,
      platformChannelSpecifics,
    );

    print('üîî –õ–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ –≤ —à—Ç–æ—Ä–∫–µ Android');
  }

  void _handleBackgroundMessage(RemoteMessage message) {
    print('üì± –û—Ç–∫—Ä—ã—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ background: ${message.notification?.title}');
    _handleNotificationData(message.data);
  }

  static Future<void> _handleBackgroundMessageStatic(RemoteMessage message) async {
    print('üì± –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ background: ${message.notification?.title}');
    // –î–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–µ—Ç–æ–¥–∞ –º—ã –Ω–µ –º–æ–∂–µ–º –≤—ã–∑–≤–∞—Ç—å _handleNotificationData –Ω–∞–ø—Ä—è–º—É—é
    // –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  }

  void _handleNotificationData(Map<String, dynamic> data) {
    print('üìä –î–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $data');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    final notificationType = data['type'];
    final context = navigatorKey.currentContext;

    if (context != null && notificationType != null) {
      switch (notificationType) {
        case 'task_assigned':
          _handleTaskAssigned(context, data);
          break;
        case 'project_approved':
          _handleProjectApproved(context, data);
          break;
        case 'project_deleted':
          _handleProjectDeleted(context, data);
          break;
        case 'photo_rejected':
          _handlePhotoRejected(context, data);
          break;
        default:
          print('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $notificationType');
      }
    }
  }

  void _handleTaskAssigned(BuildContext context, Map<String, dynamic> data) {
    final projectTitle = data['project_title'] ?? '–ü—Ä–æ–µ–∫—Ç';
    final taskText = data['task_text'] ?? '–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ';

    showInAppNotification(
      context,
      '–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ!',
      '–ü—Ä–æ–µ–∫—Ç: $projectTitle\n–ó–∞–¥–∞–Ω–∏–µ: $taskText'
    );
  }

  void _handleProjectApproved(BuildContext context, Map<String, dynamic> data) {
    final projectTitle = data['project_title'] ?? '–ü—Ä–æ–µ–∫—Ç';

    showInAppNotification(
      context,
      '–ü—Ä–æ–µ–∫—Ç –æ–¥–æ–±—Ä–µ–Ω!',
      '–í–∞—à –ø—Ä–æ–µ–∫—Ç "$projectTitle" –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.'
    );
  }

  void _handleProjectDeleted(BuildContext context, Map<String, dynamic> data) {
    final projectTitle = data['project_title'] ?? '–ü—Ä–æ–µ–∫—Ç';

    showInAppNotification(
      context,
      '–ü—Ä–æ–µ–∫—Ç —É–¥–∞–ª–µ–Ω',
      '–ü—Ä–æ–µ–∫—Ç "$projectTitle" –±—ã–ª —É–¥–∞–ª–µ–Ω –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º.'
    );
  }

  void _handlePhotoRejected(BuildContext context, Map<String, dynamic> data) {
    final projectTitle = data['project_title'] ?? '–ü—Ä–æ–µ–∫—Ç';

    showInAppNotification(
      context,
      '–§–æ—Ç–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ',
      '–í–∞—à–µ —Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ "$projectTitle" –±—ã–ª–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ.'
    );
  }

  Future<void> _sendTokenToServer() async {
    if (_fcmToken == null || _authToken == null) return;

    try {
      final url = AppConfig.deviceTokenUrl;
      if (kDebugMode) {
        print('üì§ Sending FCM token to: $url');
        print('   Token: ${_fcmToken!.substring(0, 50)}...');
        print('   Auth: Bearer ${_authToken!.substring(0, 20)}...');
      }

      final response = await http.post(
        Uri.parse(url),
        headers: {
          'Authorization': 'Bearer $_authToken',
          'Content-Type': 'application/json',
        },
        body: jsonEncode({
          'token': _fcmToken,
          'platform': Platform.isIOS ? 'ios' : 'android',  // ‚úÖ –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        }),
      );

      if (kDebugMode) {
        print('üì° Response status: ${response.statusCode}');
        print('üìÑ Response body: ${response.body}');
      }

      if (response.statusCode == 200 || response.statusCode == 201) {
        print('‚úÖ FCM —Ç–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä');
      } else {
        print('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ FCM —Ç–æ–∫–µ–Ω–∞: ${response.statusCode}');
        print('   ${response.body}');
      }
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–æ–∫–µ–Ω–∞: $e');
    }
  }

  Future<void> removeTokenFromServer() async {
    if (_authToken == null) return;

    try {
      // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º AppConfig –≤–º–µ—Å—Ç–æ hardcoded URL
      final response = await http.delete(
        Uri.parse(AppConfig.deviceTokenUrl),
        headers: {
          'Authorization': 'Bearer $_authToken',
          'Content-Type': 'application/json',
        },
      );

      if (response.statusCode == 200) {
        print('‚úÖ FCM —Ç–æ–∫–µ–Ω —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞');
      }
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: $e');
    }
  }

  String? get fcmToken => _fcmToken;
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
void showInAppNotification(BuildContext context, String title, String body) {
  ScaffoldMessenger.of(context).showSnackBar(
    SnackBar(
      content: Column(
        mainAxisSize: MainAxisSize.min,
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: const TextStyle(
              fontWeight: FontWeight.bold,
              color: Colors.white,
            ),
          ),
          const SizedBox(height: 4),
          Text(
            body,
            style: const TextStyle(color: Colors.white),
          ),
        ],
      ),
      backgroundColor: const Color(0xFF4CAF50),
      duration: const Duration(seconds: 5),
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(10),
      ),
    ),
  );
}