import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'package:shared_preferences/shared_preferences.dart';

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫–ª—é—á –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∏–∑ —Å–µ—Ä–≤–∏—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
final GlobalKey<NavigatorState> navigatorKey = GlobalKey<NavigatorState>();

class NotificationService {
  static final NotificationService _instance = NotificationService._internal();
  factory NotificationService() => _instance;
  NotificationService._internal();

  FirebaseMessaging? _firebaseMessaging;
  String? _fcmToken;
  String? _authToken;
  bool _firebaseInitialized = false;

  Future<void> initialize() async {
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
      await Firebase.initializeApp();
      _firebaseMessaging = FirebaseMessaging.instance;
      _firebaseInitialized = true;
      print('‚úÖ Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');

      // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      NotificationSettings settings = await _firebaseMessaging!.requestPermission(
        alert: true,
        badge: true,
        sound: true,
      );

      print('üîî –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${settings.authorizationStatus}');

      // –ü–æ–ª—É—á–µ–Ω–∏–µ FCM —Ç–æ–∫–µ–Ω–∞
      _fcmToken = await _firebaseMessaging!.getToken();
      print('üîë FCM Token: $_fcmToken');

      // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ
      if (_fcmToken != null) {
        final prefs = await SharedPreferences.getInstance();
        await prefs.setString('fcm_token', _fcmToken!);
      }

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      FirebaseMessaging.onMessage.listen(_handleForegroundMessage);
      FirebaseMessaging.onMessageOpenedApp.listen(_handleBackgroundMessage);
      FirebaseMessaging.onBackgroundMessage(_handleBackgroundMessageStatic);

      print('üéØ –°–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase: $e');
      print('üîî –°–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (–±–µ–∑ Firebase)');
      _firebaseInitialized = false;

      // Fallback –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      _fcmToken = 'test_fcm_token_${DateTime.now().millisecondsSinceEpoch}';
      final prefs = await SharedPreferences.getInstance();
      await prefs.setString('fcm_token', _fcmToken!);
      print('üîë Test FCM Token: $_fcmToken');
    }
  }

  Future<void> setAuthToken(String token) async {
    _authToken = token;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ FCM —Ç–æ–∫–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (_fcmToken != null && _authToken != null) {
      await _sendTokenToServer();
    }
  }

  void _handleForegroundMessage(RemoteMessage message) {
    print('üì± –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ foreground: ${message.notification?.title}');

    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    if (message.notification != null) {
      print('üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${message.notification!.title} - ${message.notification!.body}');

      // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      final context = navigatorKey.currentContext;
      if (context != null) {
        showInAppNotification(
          context,
          message.notification!.title ?? '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
          message.notification!.body ?? ''
        );
      }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    _handleNotificationData(message.data);
  }

  void _handleBackgroundMessage(RemoteMessage message) {
    print('üì± –û—Ç–∫—Ä—ã—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ background: ${message.notification?.title}');
    _handleNotificationData(message.data);
  }

  static Future<void> _handleBackgroundMessageStatic(RemoteMessage message) async {
    print('üì± –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ background: ${message.notification?.title}');
    // –î–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–µ—Ç–æ–¥–∞ –º—ã –Ω–µ –º–æ–∂–µ–º –≤—ã–∑–≤–∞—Ç—å _handleNotificationData –Ω–∞–ø—Ä—è–º—É—é
    // –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  }

  void _handleNotificationData(Map<String, dynamic> data) {
    print('üìä –î–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $data');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    final notificationType = data['type'];
    final context = navigatorKey.currentContext;

    if (context != null && notificationType != null) {
      switch (notificationType) {
        case 'task_assigned':
          _handleTaskAssigned(context, data);
          break;
        case 'project_approved':
          _handleProjectApproved(context, data);
          break;
        case 'project_deleted':
          _handleProjectDeleted(context, data);
          break;
        case 'photo_rejected':
          _handlePhotoRejected(context, data);
          break;
        default:
          print('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $notificationType');
      }
    }
  }

  void _handleTaskAssigned(BuildContext context, Map<String, dynamic> data) {
    final projectTitle = data['project_title'] ?? '–ü—Ä–æ–µ–∫—Ç';
    final taskText = data['task_text'] ?? '–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ';

    showInAppNotification(
      context,
      '–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ!',
      '–ü—Ä–æ–µ–∫—Ç: $projectTitle\n–ó–∞–¥–∞–Ω–∏–µ: $taskText'
    );
  }

  void _handleProjectApproved(BuildContext context, Map<String, dynamic> data) {
    final projectTitle = data['project_title'] ?? '–ü—Ä–æ–µ–∫—Ç';

    showInAppNotification(
      context,
      '–ü—Ä–æ–µ–∫—Ç –æ–¥–æ–±—Ä–µ–Ω!',
      '–í–∞—à –ø—Ä–æ–µ–∫—Ç "$projectTitle" –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.'
    );
  }

  void _handleProjectDeleted(BuildContext context, Map<String, dynamic> data) {
    final projectTitle = data['project_title'] ?? '–ü—Ä–æ–µ–∫—Ç';

    showInAppNotification(
      context,
      '–ü—Ä–æ–µ–∫—Ç —É–¥–∞–ª–µ–Ω',
      '–ü—Ä–æ–µ–∫—Ç "$projectTitle" –±—ã–ª —É–¥–∞–ª–µ–Ω –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º.'
    );
  }

  void _handlePhotoRejected(BuildContext context, Map<String, dynamic> data) {
    final projectTitle = data['project_title'] ?? '–ü—Ä–æ–µ–∫—Ç';

    showInAppNotification(
      context,
      '–§–æ—Ç–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ',
      '–í–∞—à–µ —Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ "$projectTitle" –±—ã–ª–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ.'
    );
  }

  Future<void> _sendTokenToServer() async {
    if (_fcmToken == null || _authToken == null) return;

    try {
      final response = await http.post(
        Uri.parse('http://10.0.2.2:8000/custom-admin/api/device-token/'),
        headers: {
          'Authorization': 'Bearer $_authToken',
          'Content-Type': 'application/json',
        },
        body: jsonEncode({
          'token': _fcmToken,
          'platform': 'android', // –∏–ª–∏ 'ios' –¥–ª—è iOS —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        }),
      );

      if (response.statusCode == 200 || response.statusCode == 201) {
        print('‚úÖ FCM —Ç–æ–∫–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä');
      } else {
        print('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ FCM —Ç–æ–∫–µ–Ω–∞: ${response.statusCode}');
      }
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–æ–∫–µ–Ω–∞: $e');
    }
  }

  Future<void> removeTokenFromServer() async {
    if (_authToken == null) return;

    try {
      final response = await http.delete(
        Uri.parse('http://10.0.2.2:8000/custom-admin/api/device-token/'),
        headers: {
          'Authorization': 'Bearer $_authToken',
          'Content-Type': 'application/json',
        },
      );

      if (response.statusCode == 200) {
        print('‚úÖ FCM —Ç–æ–∫–µ–Ω —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞');
      }
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: $e');
    }
  }

  String? get fcmToken => _fcmToken;
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
void showInAppNotification(BuildContext context, String title, String body) {
  ScaffoldMessenger.of(context).showSnackBar(
    SnackBar(
      content: Column(
        mainAxisSize: MainAxisSize.min,
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: const TextStyle(
              fontWeight: FontWeight.bold,
              color: Colors.white,
            ),
          ),
          const SizedBox(height: 4),
          Text(
            body,
            style: const TextStyle(color: Colors.white),
          ),
        ],
      ),
      backgroundColor: const Color(0xFF4CAF50),
      duration: const Duration(seconds: 5),
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(10),
      ),
    ),
  );
}